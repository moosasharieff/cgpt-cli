name: deps-lock-check

on:
  pull_request:
    paths:
      - 'requirements.in'
      - 'requirements_dev.in'
      - 'requirements.txt'
      - 'requirements_dev.txt'
  push:
    branches: [ main, dev ]
    paths:
      - 'requirements.in'
      - 'requirements_dev.in'
      - 'requirements.txt'
      - 'requirements_dev.txt'

jobs:
  lockcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 'Install pip-tools'
        run: python -m pip install -U pip pip-tools

      - name: 'Sanity check: dev lock must extend base lock'
        shell: bash
        run: |
          grep -Eq '^[[:space:]]*-r[[:space:]]+requirements\.txt[[:space:]]*$' requirements_dev.in \
            || { echo "::error::requirements_dev.in must include '-r requirements.txt' (first lines)."; exit 1; }

      - name: 'Re-compile locks (should be no changes)'
        run: |
          pip-compile --generate-hashes requirements.in
          pip-compile --generate-hashes requirements_dev.in

      - name: 'Fail if lockfiles changed'
        run: |
          git diff --name-only --exit-code requirements.txt requirements_dev.txt \
            || { echo "::error::Lockfiles are stale. Run 'make compile' and commit."; exit 1; }

  smoke-install:
    name: 'Smoke install (hash-checked)'
    needs: lockcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 'Create clean venv'
        shell: bash
        run: |
          python -m venv .ci-venv
          . .ci-venv/bin/activate
          python -m pip install -U pip

          # Install base with hashes
          pip install --require-hashes -r requirements.txt

          # Install dev with hashes (includes base pins)
          pip install --require-hashes -r requirements_dev.txt

      - name: 'Verify import (optional)'
        run: |
          . .ci-venv/bin/activate
          python -c "print('Deps OK')"

      - name: 'Removing .ci-venv'
        if: always()
        run: |
          rm -rf .ci-venv
